# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(512, 482)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralWidget.sizePolicy().hasHeightForWidth())
        self.centralWidget.setSizePolicy(sizePolicy)
        self.centralWidget.setObjectName("centralWidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralWidget)
        self.verticalLayout_2.setContentsMargins(11, 11, 11, 11)
        self.verticalLayout_2.setSpacing(6)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout.setSpacing(6)
        self.verticalLayout.setObjectName("verticalLayout")
        self.logoLabel = QtWidgets.QLabel(self.centralWidget)
        self.logoLabel.setText("")
        self.logoLabel.setPixmap(QtGui.QPixmap(":/images/Dygma_logo_color.png"))
        self.logoLabel.setObjectName("logoLabel")
        self.verticalLayout.addWidget(self.logoLabel)
        self.tabWidget = QtWidgets.QTabWidget(self.centralWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setObjectName("tabWidget")
        self.update_side_fw = QtWidgets.QWidget()
        self.update_side_fw.setObjectName("update_side_fw")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.update_side_fw)
        self.verticalLayout_3.setContentsMargins(11, 11, 11, 11)
        self.verticalLayout_3.setSpacing(6)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSpacing(6)
        self.gridLayout.setObjectName("gridLayout")
        self.verify_right = QtWidgets.QPushButton(self.update_side_fw)
        self.verify_right.setObjectName("verify_right")
        self.gridLayout.addWidget(self.verify_right, 2, 0, 1, 1)
        self.flash_right = QtWidgets.QPushButton(self.update_side_fw)
        self.flash_right.setObjectName("flash_right")
        self.gridLayout.addWidget(self.flash_right, 5, 0, 1, 1)
        self.verify_left = QtWidgets.QPushButton(self.update_side_fw)
        self.verify_left.setObjectName("verify_left")
        self.gridLayout.addWidget(self.verify_left, 0, 0, 1, 1)
        self.flash_left = QtWidgets.QPushButton(self.update_side_fw)
        self.flash_left.setObjectName("flash_left")
        self.gridLayout.addWidget(self.flash_left, 4, 0, 1, 1)
        self.line = QtWidgets.QFrame(self.update_side_fw)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 3, 0, 1, 1)
        self.verticalLayout_3.addLayout(self.gridLayout)
        self.tabWidget.addTab(self.update_side_fw, "")
        self.verticalLayout.addWidget(self.tabWidget)
        self.log_messages = QtWidgets.QPlainTextEdit(self.centralWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.log_messages.sizePolicy().hasHeightForWidth())
        self.log_messages.setSizePolicy(sizePolicy)
        self.log_messages.setObjectName("log_messages")
        self.verticalLayout.addWidget(self.log_messages)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 512, 25))
        self.menuBar.setObjectName("menuBar")
        self.menuDygma_Raise_Assembly_Tests = QtWidgets.QMenu(self.menuBar)
        self.menuDygma_Raise_Assembly_Tests.setObjectName("menuDygma_Raise_Assembly_Tests")
        MainWindow.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.actionCopy_log = QtWidgets.QAction(MainWindow)
        self.actionCopy_log.setObjectName("actionCopy_log")
        self.actionClear_log = QtWidgets.QAction(MainWindow)
        self.actionClear_log.setObjectName("actionClear_log")
        self.menuDygma_Raise_Assembly_Tests.addAction(self.actionCopy_log)
        self.menuDygma_Raise_Assembly_Tests.addAction(self.actionClear_log)
        self.menuBar.addAction(self.menuDygma_Raise_Assembly_Tests.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Dygma Raise Assembly Tests"))
        self.verify_right.setText(_translate("MainWindow", "Verify Right Side current firmware"))
        self.flash_right.setText(_translate("MainWindow", "Flash Right Side new firmware"))
        self.verify_left.setText(_translate("MainWindow", "Verify Left Side current firmware"))
        self.flash_left.setText(_translate("MainWindow", "Flash Left Side new firmware"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.update_side_fw), _translate("MainWindow", "Update Side Firmware"))
        self.menuDygma_Raise_Assembly_Tests.setTitle(_translate("MainWindow", "log"))
        self.actionCopy_log.setText(_translate("MainWindow", "copy log"))
        self.actionClear_log.setText(_translate("MainWindow", "clear log"))

import image_rc
